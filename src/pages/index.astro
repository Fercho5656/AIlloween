---
import Layout from "../layouts/Layout.astro";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { CldUploadWidget } from "astro-cloudinary";
---

<Layout title="AIlloween">
	<main class="grid content-center m-auto">
		<h1>Welcome to <span class="text-gradient">AIlloween</span></h1>

		<CldUploadWidget
			id="cld-upload-widget"
			uploadPreset="ailloween"
			options={{
				sources: ["local"],
				multiple: false,
			}}
		>
			<Button>Upload</Button>
		</CldUploadWidget>

		<img id="main-img" src="" alt="" />

		<select disabled name="costume-select" id="costume-select">
			<option value="" selected disabled>Select a costume</option>
			<option value="michael myers">Michael Myers</option>
			<option value="freddy krueger">Freddy Krueger</option>
			<option value="joker">The Joker</option>
		</select>
		<label for="chk-replace-bg"
			>Add <span class="text-gradient">spooky scary</span> background
			<input
				disabled
				type="checkbox"
				name="chk-replace-bg"
				id="chk-replace-bg"
			/>
		</label>
		<Button disabled id="btn-generate-costume">Generate</Button>
	</main>
</Layout>

<script>
	import { getCldImageUrl } from "astro-cloudinary/helpers";
	import type { CloudinaryUploadEvent } from "@/types/cloudinary/uploadEvent";
	import type { ImageOptions } from "@cloudinary-util/url-loader";

	const cldUploadWidget = document.querySelector("#cld-upload-widget");
	const mainImg = document.querySelector("#main-img") as HTMLImageElement;
	const costumeSelect = document.querySelector(
		"#costume-select",
	) as HTMLSelectElement;
	const btnGenerateCostume = document.querySelector(
		"#btn-generate-costume",
	) as HTMLButtonElement;
	const chkReplaceBg = document.querySelector(
		"#chk-replace-bg",
	) as HTMLInputElement;

	if (cldUploadWidget) {
		cldUploadWidget.addEventListener("clduploadwidget:success", ((
			e: CustomEvent<CloudinaryUploadEvent>,
		) => {
			const { detail } = e;
			console.log(detail);
			const url = detail.info.secure_url;
			mainImg.src = url;
			mainImg.alt = detail.info.original_filename;
			mainImg.dataset.publicId = detail.info.public_id;
			costumeSelect.disabled = false;
		}) as EventListener);
	}

	costumeSelect.addEventListener("change", () => {
		btnGenerateCostume.disabled = false;
		chkReplaceBg.disabled = false;
	});

	btnGenerateCostume.addEventListener("click", () => {
		const selectedCostume = costumeSelect.value;
		const imageId = mainImg.dataset.publicId ?? "";

		if (!selectedCostume || !imageId) {
			return;
		}

		const options: ImageOptions = {
			src: imageId,
			replace: {
				from: "wearings",
				to: `${selectedCostume} makeup and costume for Halloween`,
				preserveGeometry: true,
			},
		};

		if (chkReplaceBg.checked) {
			options.replaceBackground = {
				prompt: "spooky scary halloween background",
			};
		}

		const transformedUrl = getCldImageUrl(options);

		mainImg.src = transformedUrl;
	});
</script>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
</style>
